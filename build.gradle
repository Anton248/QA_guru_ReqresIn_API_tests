plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.11.2"
    id "io.freefair.lombok" version "8.0.1"
}

repositories {
    mavenCentral()
}

def restAssuredVersion = "5.3.0",
    allureVersion = "2.22.2",
    slf4jVersion = "2.0.7",
    jUnitVersion = "5.10.0-M1"

dependencies {
    testImplementation (
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.junit.jupiter:junit-jupiter:$jUnitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion"
    )
}

allure {
    report {
        version.set(allureVersion)
    }
    adapter { // отвечает за появление build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion) //версия интеграции фреймворка и Allure
            }
        }

    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task smoke(type: Test) {
    useJUnitPlatform{
        includeTags("smoke")
    }
}

//нужно, чтобы брать переменные из командной строки через -D<имя переменной>=<значение>
tasks.withType(Test) {
    systemProperties(System.getProperties())
}





